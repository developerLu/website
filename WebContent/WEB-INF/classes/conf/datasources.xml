<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:jee="http://www.springframework.org/schema/jee" xmlns:lang="http://www.springframework.org/schema/lang"
    xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.0.xsd
        http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-2.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd">
	
    <!-- 主库 -->
    <bean id="master_main" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <!-- 连接配置 -->
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<!--<property name="driverClass" value="oracle.jdbc.driver.OracleDriver" />-->
		<property name="jdbcUrl" value="${datasource.master_main.jdbcUrl}" />
        <property name="user" value="${datasource.master_main.user}"/>
        <property name="password" value="${datasource.master_main.password}" />
        
        <!-- 连接池中保留的最小连接数 -->
        <property name="minPoolSize" value="5" />
        <!-- 连接池中保留的最大连接数。Default:15 -->
        <property name="maxPoolSize" value="100" />
        <!-- 初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间 -->
        <property name="initialPoolSize" value="10" />
        
        <!-- 最大空闲时间内未使用则连接被丢弃。若为0则永不丢弃 -->
        <property name="maxIdleTime" value="60" />
        <!-- 每60秒检查所有连接池中的空闲连接。Default:0 -->
        <property name="idleConnectionTestPeriod" value="60" />
        <property name="checkoutTimeout" value="30000" />
        
        
        <!-- 两次连接中间隔时间，单位毫秒 -->
        <property name="acquireRetryDelay" value="1000"/>
        <!-- 当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default:3-->
        <property name="acquireIncrement" value="20" />
        <!-- 定义在从数据库获取新连接失败后重复尝试的次数。Default: 30  -->
        <property name="acquireRetryAttempts" value="100" />
        <!-- 获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常。但是数据源仍有效保留，并在下次调用getConnection()的时候继续尝试获取连接。如果设为true，那么在尝试获取连接失败后该数据源将申明已断开并永久关闭。Default: false-->
        <property name="breakAfterAcquireFailure" value="false" />
        
        <!-- JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。但由于预缓存的statements属于单个connection而不是整个连接池。所以设置这个参数需要考虑到多方面的因素。 如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0-->
        <property name="maxStatements" value="0" />
        <!-- 因性能消耗大请只在需要的时候使用它。如果设为true那么在每个connection提交的时候都将校验其有效性。建议使用idleConnectionTestPeriod或automaticTestTable等方法来提升连接测试的性能。Default: false -->
        <property name="testConnectionOnCheckout" value="false" />
    </bean>
     <bean id="dataSources" class="com.alibaba.cobar.client.datasources.DefaultCobarDataSourceService">
        <property name="dataSourceDescriptors">
            <set>
            </set>
        </property>
        
        <!-- 探测 
            <property name="haDataSourceCreator">
                <bean class="com.alibaba.cobar.client.datasources.ha.FailoverHotSwapDataSourceCreator">
                    <property name="detectingSql" value="update cobarha set timeflag=CURRENT_TIMESTAMP()"/>
                </bean>
            </property>
        -->
    </bean>
</beans>
